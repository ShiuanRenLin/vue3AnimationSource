.grid-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.controls {
  margin-bottom: 10px;
}
.controls.mode {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}
.controls.size {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}
.controls label {
  margin: 0 10px;
}
.controls button {
  margin: 0 5px;
}
.grid {
  display: grid;
  gap: 0; /* 調整整個網格的間隔為0 */
  width: 320px; /* 固定整體網格的寬度 */
  height: 320px; /* 固定整體網格的高度 */
  margin: 20px 0; /* 上下留出20px的間距 */
}

.row {
  display: grid; /* 每行使用 grid 布局 */
  gap: 0; /* 調整每行中格子之間的間隔為0 */
}
.cell {
  width: 100%; /* 每個格子佔滿父容器寬度 */
  height: 100%; /* 每個格子的高度 */
  background-color: black; /* 背景色為黑色 */
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
  margin: 0; /* 清除 margin */
  padding: 0; /* 清除 padding */
}

.cell-content {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  margin: 0; /* 清除 margin */
  padding: 0; /* 清除 padding */
}
  
  /* 新增的CSS樣式，應用到框框的動畫效果 */
  @property --rotate {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
  }
  
  .border {
    width: calc(100%); /* 讓border元素充滿cell的寬度，考慮到border的2px和內部content的2px */
    height: calc(100%); /* 讓border元素充滿cell的高度，考慮到border的2px和內部content的2px */
    margin: auto;
    position: relative;
    overflow: hidden;
    background: gray;
    border: 1px solid black; /* 邊框寬度將根據邏輯動態設置 */
    border-radius: 10px; /* 添加內部內容的圓角 */
    box-sizing: border-box; /* 保證寬度和高度包括邊框 */
  }
  
  .border.animate {
    background: gray;
    background-image: repeating-conic-gradient(
      from var(--rotate),
      #eeeeee 0%, 
      #eeeeee 10%, 
      transparent 10%, 
      transparent 50%
    );
    animation: rotating 2s ease-out infinite; /* 添加 easing 效果 */
  }
  
  .border .content {
    position: absolute;
    width: calc(100% - 2px); /* 調整內部content的寬度 */
    height: calc(100% - 2px); /* 調整內部content的高度 */
    top: 1px;
    left: 1px;
    background-color: black; /* 正方形內部背景色改為黑色 */
    border-radius: inherit; /* 添加內部內容的圓角 */
  }
  
  .border::after {
    position: absolute;
    inset: 2px;
    border: 1px solid black;
    border-radius: 10px;
    background-color: black;
  }
  
  .border.no-animation {
    animation: none !important; /* 禁用動畫 */
  }
  
  .reset-animation {
    animation: none !important; /* 重置動畫 */
  }
  @keyframes sweep {
    0% {
        transform: rotate(0deg);
    }
    50% {
      transform: rotate(180deg);
  }
    100% {
        transform: rotate(360deg);
    }
  }

  @keyframes rotating {
    0% {
      --rotate: 0deg;
    }
    50% {
      --rotate: 180deg;
    }
    100% {
      --rotate: 360deg;
    }
  }
  

  /* Safari 專用動畫效果 */
@media not all and (min-resolution:.001dpcm) { @supports (-webkit-appearance:none) {

  .border.animate {
    background: gray;
    position: relative;
    overflow: hidden;
    border-radius: 10px; 
  }
  .border.animate::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        45deg,
        #eeeeee 0%, 
        #eeeeee 25%, 
        transparent 20%, 
        transparent 80%
    );
    animation: sweep 2s ease-out infinite;
    border-radius: inherit;
  }

  @keyframes sweep {
    0% {
        transform: rotate(0deg);
    }
    50% {
      transform: rotate(180deg);
    }
    100% {
        transform: rotate(360deg);
    }
  }
}}

  @media (max-width: 768px) {
    .grid {
      width: 240px; /* 在小屏幕下調整整體網格的寬度 */
      height: 240px; /* 在小屏幕下調整整體網格的高度 */
    }
  }
  
  @media (max-width: 480px) {
    .grid {
      width: 180px; /* 在更小屏幕下進一步調整整體網格的寬度 */
      height: 180px; /* 在更小屏幕下進一步調整整體網格的高度 */
    }
  }
